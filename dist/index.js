
  /**
   * @license
   * author: Ryan Feigenbaum
   * footnoter.js v1.0.0
   * Released under the MIT license.
   */

var footnoter = (function () {
	'use strict';

	const styles = `.footnote {position:relative} a.footnote:hover {opacity: 1} .footnote:hover::after {width:200px;
	content: attr(data-reference); position:absolute; top: -1rem; right: 25px; box-shadow: 2px 2px 20px rgb(0 0 0 / .25); padding: 5px 15px; background: white; border-radius; 5px; transform: translateY(-50%); 
}`;

	function init() {
	    const article = document.querySelector('article');
	    if (!article)
	        throw Error('Content container not found');
	    const ni = document.createNodeIterator(article, NodeFilter.SHOW_TEXT);
	    if (!ni.referenceNode)
	        return;
	    let current = ni.nextNode();
	    let nodes = [];
	    while (current) {
	        const str = ni.referenceNode.textContent;
	        if (typeof str !== "string" || !str)
	            throw Error('Nothing to match');
	        if (/>>/.test(str)) {
	            const matchResults = str.match(/>>(\d)/);
	            if (matchResults) {
	                const [whole, group] = matchResults;
	                const extract = str.replace(/>>\d/, "");
	                const fn = document.createElement('a');
	                const sup = document.createElement('sup');
	                fn.setAttribute('href', `#${group}`);
	                sup.textContent = group;
	                fn.setAttribute('style', 'padding: 5px');
	                fn.classList.add('footnote');
	                fn.id = `ref-${group}`;
	                fn.append(sup);
	                ni.referenceNode.parentElement && ni.referenceNode.parentElement.append(fn);
	                ni.referenceNode.textContent = extract;
	                nodes.push(ni.referenceNode);
	            }
	        }
	        if (/<</.test(ni.referenceNode.textContent)) {
	            const t = ni.referenceNode.textContent.match(/<<(\d)/, "FOOTNOTE $1")[1];
	            const extract = ni.referenceNode.textContent.replace(/<<\d/, "");
	            const reference = ni.referenceNode.parentElement.textContent.replace(/<<\d/, "");
	            document.getElementById(`ref-${t}`).setAttribute('data-reference', reference);
	            const fn = document.createElement('a');
	            const sup = document.createElement('sup');
	            fn.setAttribute('href', `#ref-${t}`);
	            sup.textContent = t;
	            fn.setAttribute('style', 'padding: 5px');
	            fn.id = t;
	            fn.append(sup);
	            ni.referenceNode.parentElement.prepend(fn);
	            ni.referenceNode.textContent = extract;
	        }
	        current = ni.nextNode();
	    }
	    const style = document.createElement('style');
	    style.textContent = styles;
	    document.head.append(style);
	    console.log(nodes);
	}

	return init;

})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbIi4uL3NyYy9zdHlsZXMudHMiLCIuLi9zcmMvaW5kZXgudHMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgc3R5bGVzOiBzdHJpbmcgPSBgLmZvb3Rub3RlIHtwb3NpdGlvbjpyZWxhdGl2ZX0gYS5mb290bm90ZTpob3ZlciB7b3BhY2l0eTogMX0gLmZvb3Rub3RlOmhvdmVyOjphZnRlciB7d2lkdGg6MjAwcHg7XG5cdGNvbnRlbnQ6IGF0dHIoZGF0YS1yZWZlcmVuY2UpOyBwb3NpdGlvbjphYnNvbHV0ZTsgdG9wOiAtMXJlbTsgcmlnaHQ6IDI1cHg7IGJveC1zaGFkb3c6IDJweCAycHggMjBweCByZ2IoMCAwIDAgLyAuMjUpOyBwYWRkaW5nOiA1cHggMTVweDsgYmFja2dyb3VuZDogd2hpdGU7IGJvcmRlci1yYWRpdXM7IDVweDsgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC01MCUpOyBcbn1gXG5cbmV4cG9ydCBkZWZhdWx0IHN0eWxlczsiLCJpbXBvcnQgb3B0aW9ucyBmcm9tIFwiLi9vcHRpb25zXCI7XG5pbXBvcnQgc3R5bGVzIGZyb20gXCIuL3N0eWxlc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpbml0KCkge1xuICAgIGNvbnN0IGFydGljbGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdhcnRpY2xlJylcblxuICAgIGlmICghYXJ0aWNsZSkgdGhyb3cgRXJyb3IoJ0NvbnRlbnQgY29udGFpbmVyIG5vdCBmb3VuZCcpO1xuXG4gICAgY29uc3QgbmkgPSBkb2N1bWVudC5jcmVhdGVOb2RlSXRlcmF0b3IoYXJ0aWNsZSwgTm9kZUZpbHRlci5TSE9XX1RFWFQpXG5cbiAgICBpZiAoIW5pLnJlZmVyZW5jZU5vZGUpIHJldHVybjtcblxuICAgIGxldCBjdXJyZW50ID0gbmkubmV4dE5vZGUoKVxuXG4gICAgbGV0IG5vZGVzID0gW11cblxuICAgIHdoaWxlIChjdXJyZW50KSB7XG4gICAgICAgIGNvbnN0IHN0ciA9IG5pLnJlZmVyZW5jZU5vZGUudGV4dENvbnRlbnQ7XG5cbiAgICAgICAgaWYgKHR5cGVvZiBzdHIgIT09IFwic3RyaW5nXCIgfHwgIXN0cikgdGhyb3cgRXJyb3IoJ05vdGhpbmcgdG8gbWF0Y2gnKTtcblxuICAgICAgICBpZiAoLz4+Ly50ZXN0KHN0cikpIHtcblxuICAgICAgICAgICAgY29uc3QgbWF0Y2hSZXN1bHRzID0gc3RyLm1hdGNoKC8+PihcXGQpLyk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGlmIChtYXRjaFJlc3VsdHMpIHtcbiAgICAgICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBjb25zdCBbd2hvbGUsIGdyb3VwXSA9IG1hdGNoUmVzdWx0cztcbiAgICAgICAgICAgICAgICBjb25zdCBleHRyYWN0ID0gc3RyLnJlcGxhY2UoLz4+XFxkLywgXCJcIilcbiAgICAgICAgICAgICAgICBjb25zdCBmbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKVxuICAgICAgICAgICAgICAgIGNvbnN0IHN1cCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N1cCcpXG4gICAgICAgICAgICAgICAgZm4uc2V0QXR0cmlidXRlKCdocmVmJywgYCMke2dyb3VwfWApXG4gICAgICAgICAgICAgICAgc3VwLnRleHRDb250ZW50ID0gZ3JvdXA7XG4gICAgICAgICAgICAgICAgZm4uc2V0QXR0cmlidXRlKCdzdHlsZScsICdwYWRkaW5nOiA1cHgnKVxuICAgICAgICAgICAgICAgIGZuLmNsYXNzTGlzdC5hZGQoJ2Zvb3Rub3RlJylcbiAgICAgICAgICAgICAgICBmbi5pZCA9IGByZWYtJHtncm91cH1gO1xuICAgICAgICAgICAgICAgIGZuLmFwcGVuZChzdXApXG4gICAgICAgICAgICAgICAgbmkucmVmZXJlbmNlTm9kZS5wYXJlbnRFbGVtZW50ICYmIG5pLnJlZmVyZW5jZU5vZGUucGFyZW50RWxlbWVudC5hcHBlbmQoZm4pXG5cbiAgICAgICAgICAgICAgICBuaS5yZWZlcmVuY2VOb2RlLnRleHRDb250ZW50ID0gZXh0cmFjdDtcblxuXG4gICAgICAgICAgICAgICAgbm9kZXMucHVzaChuaS5yZWZlcmVuY2VOb2RlKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgaWYgKC88PC8udGVzdChuaS5yZWZlcmVuY2VOb2RlLnRleHRDb250ZW50KSkge1xuXG4gICAgICAgICAgICBjb25zdCB0ID0gbmkucmVmZXJlbmNlTm9kZS50ZXh0Q29udGVudC5tYXRjaCgvPDwoXFxkKS8sIFwiRk9PVE5PVEUgJDFcIilbMV1cbiAgICAgICAgICAgIGNvbnN0IGV4dHJhY3QgPSBuaS5yZWZlcmVuY2VOb2RlLnRleHRDb250ZW50LnJlcGxhY2UoLzw8XFxkLywgXCJcIilcblxuXG4gICAgICAgICAgICBjb25zdCByZWZlcmVuY2UgPSBuaS5yZWZlcmVuY2VOb2RlLnBhcmVudEVsZW1lbnQudGV4dENvbnRlbnQucmVwbGFjZSgvPDxcXGQvLCBcIlwiKTtcbiAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGByZWYtJHt0fWApLnNldEF0dHJpYnV0ZSgnZGF0YS1yZWZlcmVuY2UnLCByZWZlcmVuY2UpXG4gICAgICAgICAgICBjb25zdCBmbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EnKVxuICAgICAgICAgICAgY29uc3Qgc3VwID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3VwJylcbiAgICAgICAgICAgIGZuLnNldEF0dHJpYnV0ZSgnaHJlZicsIGAjcmVmLSR7dH1gKVxuICAgICAgICAgICAgc3VwLnRleHRDb250ZW50ID0gdDtcbiAgICAgICAgICAgIGZuLnNldEF0dHJpYnV0ZSgnc3R5bGUnLCAncGFkZGluZzogNXB4JylcbiAgICAgICAgICAgIGZuLmlkID0gdDtcbiAgICAgICAgICAgIGZuLmFwcGVuZChzdXApXG4gICAgICAgICAgICBuaS5yZWZlcmVuY2VOb2RlLnBhcmVudEVsZW1lbnQucHJlcGVuZChmbilcblxuICAgICAgICAgICAgbmkucmVmZXJlbmNlTm9kZS50ZXh0Q29udGVudCA9IGV4dHJhY3Q7XG5cblxuICAgICAgICB9XG5cbiAgICAgICAgY3VycmVudCA9IG5pLm5leHROb2RlKClcbiAgICB9XG5cblxuICAgIGNvbnN0IHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKVxuICAgIHN0eWxlLnRleHRDb250ZW50ID0gc3R5bGVzO1xuICAgIGRvY3VtZW50LmhlYWQuYXBwZW5kKHN0eWxlKVxuICAgIGNvbnNvbGUubG9nKG5vZGVzKVxufSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztDQUFBLE1BQU0sTUFBTSxHQUFXLENBQUE7O0VBRXJCOztDQ0NZLFNBQVUsSUFBSSxHQUFBO0tBQ3hCLE1BQU0sT0FBTyxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMsU0FBUyxDQUFDLENBQUE7Q0FFakQsSUFBQSxJQUFJLENBQUMsT0FBTztDQUFFLFFBQUEsTUFBTSxLQUFLLENBQUMsNkJBQTZCLENBQUMsQ0FBQztDQUV6RCxJQUFBLE1BQU0sRUFBRSxHQUFHLFFBQVEsQ0FBQyxrQkFBa0IsQ0FBQyxPQUFPLEVBQUUsVUFBVSxDQUFDLFNBQVMsQ0FBQyxDQUFBO0tBRXJFLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYTtTQUFFLE9BQU87Q0FFOUIsSUFBQSxJQUFJLE9BQU8sR0FBRyxFQUFFLENBQUMsUUFBUSxFQUFFLENBQUE7S0FFM0IsSUFBSSxLQUFLLEdBQUcsRUFBRSxDQUFBO0NBRWQsSUFBQSxPQUFPLE9BQU8sRUFBRTtDQUNaLFFBQUEsTUFBTSxHQUFHLEdBQUcsRUFBRSxDQUFDLGFBQWEsQ0FBQyxXQUFXLENBQUM7Q0FFekMsUUFBQSxJQUFJLE9BQU8sR0FBRyxLQUFLLFFBQVEsSUFBSSxDQUFDLEdBQUc7Q0FBRSxZQUFBLE1BQU0sS0FBSyxDQUFDLGtCQUFrQixDQUFDLENBQUM7Q0FFckUsUUFBQSxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUU7YUFFaEIsTUFBTSxZQUFZLEdB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
